<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SolitaireGameSchema"
    targetNamespace="http://playingcards.org/solitaire"
    elementFormDefault="qualified"
    xmlns="http://playingcards.org/solitaire"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
	<!--Root element-->
	<!--<xs:element name="library">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="games">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="game" type="uniqueGameType">
								<xs:unique name="uniqueIdForEachGame">
									<xs:selector xpath="game"/>
									<xs:field xpath="@id"/>
								</xs:unique>
							</xs:element>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>-->
	<xs:element name="library">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="game" type="uniqueGameType">
					<xs:unique name="uniqueIdForEachGame">
						<xs:selector xpath="game"/>
						<xs:field xpath="@id"/>
					</xs:unique>
				</xs:element>
			</xs:choice>
		</xs:complexType>
	</xs:element>


	<!--Base types-->
	<xs:simpleType name="buildStratType">
		<xs:restriction base="xs:string">
			<xs:pattern value="none|any|alternate_color|same_color|alternate_suit|same_suit"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="rankType">
		<xs:restriction base="xs:string">
			<xs:pattern value="any|[AJQK]|[0-9]|10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="associationType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(\d+|all_(tableau|file|cell|reserve|waste|foundation)s)(,\s*(\d+|all_(tableau|file|cell|reserve|waste|foundation)s))+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="suitType">
		<xs:restriction base="xs:string">
			<xs:pattern value="hearts|diamonds|clubs|spades|any"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="infIntType">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d+|inf"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="numberIdType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:pattern value="auto|[0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="shownCountType">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d+|full"/>
		</xs:restriction>
	</xs:simpleType>


	<!--Pile types-->
	<xs:simpleType name="positionType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[-]?\d+,[-]?\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="stockVariantType">
		<xs:restriction base="xs:string">
			<xs:pattern value="base|dealer"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="fileVariantType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="base"/>
			<xs:enumeration value="automove"/>
			<xs:enumeration value="cell_inhibited"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="positionedPileType">
		<xs:attribute name="pos" type="positionType"/>
	</xs:complexType>
	<xs:complexType name="pileCascadeType">
		<xs:attribute name="start_pos" type="positionType"/>
		<xs:attribute name="step" type="positionType" default="1,0"/>
		<xs:attribute name="initial_count_step" type="xs:int" default="0"/>
		<xs:attribute name="initial_shown_step" default="0">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="\d+|full"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	
	<xs:complexType name="fileType">
		<xs:attribute name="variant" type="fileVariantType"/>
		<xs:attribute name="initial_count" type="xs:int" default="0"/>
		<xs:attribute name="initial_shown" type="shownCountType"/>
		<xs:attribute name="automove_threshold" type="xs:int"/>
		<xs:attribute name="association" type="associationType"/>
		<xs:attribute name="build_strat" type="buildStratType" use="required"/>
		<xs:attribute name="build_gap" type="xs:int" default="-1"/>
		<xs:attribute name="build_init" type="rankType" default="any"/>
		<xs:attribute name="build_wrapping" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="foundationType">
		<xs:attribute name="suit" type="suitType"/>
		<xs:attribute name="build_gap" type="xs:int" default="1"/>
		<xs:attribute name="build_init" type="rankType" default="A"/>
		<xs:attribute name="build_wrapping" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="stockType">
		<xs:attribute name="variant" type="stockVariantType"/>
		<xs:attribute name="association" type="associationType"/>
		<xs:attribute name="deal_amount" type="xs:int"/>
		<xs:attribute name="restock_allowance" type="infIntType"/>
	</xs:complexType>
	<xs:complexType name="wasteType">
		<xs:attribute name="shown_amount" type="shownCountType"/>
	</xs:complexType>
	<xs:complexType name="reserveType">
		<xs:attribute name="initial_count" type="xs:int"/>
	</xs:complexType>
			
	<xs:complexType name="positionedFileType">
		<xs:complexContent>
			<xs:extension base="fileType">
				<xs:attribute name="id" type="numberIdType" use="required"/>
				<xs:attribute name="pos" type="positionType" use="required"/>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="positionedFoundationType">
		<xs:complexContent>
			<xs:extension base="foundationType">
				<xs:attribute name="id" type="numberIdType" use="required"/>
				<xs:attribute name="pos" type="positionType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="positionedStockType">
		<xs:complexContent>
			<xs:extension base="stockType">
				<xs:attribute name="id" type="numberIdType" use="required"/>
				<xs:attribute name="pos" type="positionType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="positionedWasteType">
		<xs:complexContent>
			<xs:extension base="wasteType">
				<xs:attribute name="id" type="numberIdType" use="required"/>
				<xs:attribute name="pos" type="positionType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="positionedReserveType">
		<xs:complexContent>
			<xs:extension base="reserveType">
				<xs:attribute name="id" type="numberIdType" use="required"/>
				<xs:attribute name="pos" type="positionType" use="required"/>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="positionedCellType">
			<xs:attribute name="id" type="numberIdType" use="required"/>
			<xs:attribute name="pos" type="positionType" use="required"/>				
	</xs:complexType>

	<xs:complexType name="foundationSetType">
		<xs:complexContent>
			<xs:extension base="foundationType">
				<xs:choice>
					<xs:element name="foundation" type="positionedPileType"/>
					<xs:element name="cascade" type="pileCascadeType" maxOccurs="1"/>
				</xs:choice>
				<xs:attribute name="start_id" type="numberIdType" default="auto"/>
				<xs:attribute name="count" type="xs:int"/>
				<xs:attribute name="suit_order">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="(hearts,?|diamonds,?|clubs,?|spades,?){4}"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>	
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="cellSetType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="cell" type="positionedPileType"/>
			<xs:element name="cascade" type="pileCascadeType" maxOccurs="1"/>
		</xs:choice>
		<xs:attribute name="start_id" type="numberIdType" default="auto"/>
		<xs:attribute name="count" type="xs:int"/>
	</xs:complexType>
	<xs:complexType name="fileSetType">
		<xs:complexContent>
			<xs:extension base="fileType">
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element name="file" type="positionedPileType"/>
					<xs:element name="cascade" maxOccurs="1" type="pileCascadeType"/>
				</xs:choice>
				<xs:attribute name="start_id" type="numberIdType" default="auto"/>
				<xs:attribute name="count" type="xs:int"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	
	<!--Metadata types and element-->
	<xs:complexType name="gameType">
		<xs:sequence>
			<xs:element name="metadata" type="metadataType"/>
			<xs:element name="layout" type="layoutType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="uniqueGameType">
		<xs:complexContent>
			<xs:extension base="gameType">
				<xs:attribute name="id" type="xs:int" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="deckType">
		<xs:attribute name="count" type="xs:int"/>
		<xs:attribute name="type">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="full|hearts|diamonds|clubs|spades"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="winConditionType">
		<xs:restriction base="xs:string">
			<xs:pattern value="fill_foundation|clear_tableau|custom"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="metadataType">
		<xs:sequence>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="deck" type="deckType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="win_condition" type="winConditionType" use="required"/>
	</xs:complexType>
	<xs:complexType name="layoutType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="stock" type="positionedStockType"/>
			<xs:element name="waste" type="positionedWasteType"/>
			<xs:element name="foundation_set" type="foundationSetType"/>
			<xs:element name="foundation" type="positionedFoundationType"/>
			<xs:element name="cell_set" type="cellSetType"/>
			<xs:element name="cell" type="positionedCellType"/>
			<xs:element name="file_set" type="fileSetType"/>
			<xs:element name="file" type="positionedFileType"/>
			<xs:element name="reserve" type="positionedReserveType"/>
			<xs:element name="tableau">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="cell_set" type="cellSetType"/>
						<xs:element name="cell" type="positionedCellType"/>
						<xs:element name="file_set" type="fileSetType"/>
						<xs:element name="file" type="positionedFileType"/>
						<xs:element name="reserve" type="positionedReserveType"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
</xs:schema>
